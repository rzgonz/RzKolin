apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 3
        versionName '1.1.0'
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }
    productFlavors {
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}
androidExtensions {
    experimental = true
}
kapt {
    generateStubs true
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //android
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api "com.android.support:appcompat-v7:$supportLibraryVersion"
    api "com.android.support:design:$supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$supportLibraryVersion"
    api "com.android.support:cardview-v7:$supportLibraryVersion"
    api "com.android.support:support-v4:$supportLibraryVersion"
    
    api "com.android.support:multidex:$multidex"
    //text
    api "uk.co.chrisjenx:calligraphy:$calligraphy"
    //network
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "net.gotev:uploadservice:$uploadService"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.retrofit2:adapter-rxjava2:$retrofit"
    api 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    // Use if Kotlin user.
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:$dbFlow"
    //rxjava
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines"
    api "io.reactivex.rxjava2:rxandroid:$rxAndroid"
    api "io.reactivex.rxjava2:rxkotlin:$rxJava"
    api 'com.github.tbruyelle:rxpermissions:0.10.2'

    //glide
    api "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"
    api "jp.wasabeef:glide-transformations:$glideTransform"
    api "jp.co.cyberagent.android.gpuimage:gpuimage-library:$gpuImage"
    //dagger
    api "com.google.dagger:dagger:$dagger"
    kapt ("com.google.dagger:dagger-compiler:$dagger")
}

repositories {
    google()
}